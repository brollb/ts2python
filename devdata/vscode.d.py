# Generated by ts2python on 2022-02-19 00:17:15.005592


import sys
from enum import Enum, IntEnum
from typing import Union, List, Tuple, Optional, Dict, Any, Generic, TypeVar


try:
    from ts2python.json_validation import TypedDict, GenericTypedDict, NotRequired, Literal
    # Overwrite typing.TypedDict for Runtime-Validation
except ImportError:
    # print("Module ts2python.json_validation not found. Only " 
    #       "coarse-grained type-validation of TypedDicts possible")
    try:
        from typing import TypedDict, Literal
    except ImportError:
        try:
            from ts2python.typing_extensions import TypedDict, Literal
        except ImportError:
            print(f'Please install the "typing_extensions" module via the shell '
                  f'command "# pip install typing_extensions" before running '
                  f'{__file__} with Python-versions <= 3.7!')
    try:
        from typing_extensions import NotRequired
    except ImportError:
        NotRequired = Optional
    if sys.version_info >= (3, 7, 0):  GenericMeta = type
    else:
        from typing import GenericMeta
    class _GenericTypedDictMeta(GenericMeta):
        def __new__(cls, name, bases, ns, total=True):
            return type.__new__(_GenericTypedDictMeta, name, (dict,), ns)
        __call__ = dict
    GenericTypedDict = _GenericTypedDictMeta('TypedDict', (dict,), {})
    GenericTypedDict.__module__ = __name__   


source_hash__ = "5d20d90254d485359dc5654354367829"


##### BEGIN OF LSP SPECS


version: str


class Command(TypedDict, total=False):
    title: str
    command: str
    tooltip: Optional[str]
    arguments: Optional[List[Any]]


class TextLine(TypedDict, total=True):
    lineNumber: float
    text: str
    range: 'Range'
    rangeIncludingLineBreak: 'Range'
    firstNonWhitespaceCharacterIndex: float
    isEmptyOrWhitespace: bool


class TextDocument():
    uri: 'Uri'
    fileName: str
    isUntitled: bool
    languageId: str
    version: float
    isDirty: bool
    isClosed: bool
    pass  # Transpiling function definitions has not yet been implemented: save() ignored!
    eol: 'EndOfLine'
    lineCount: float
    pass  # Transpiling function definitions has not yet been implemented: lineAt() ignored!
    pass  # Transpiling function definitions has not yet been implemented: lineAt() ignored!
    pass  # Transpiling function definitions has not yet been implemented: offsetAt() ignored!
    pass  # Transpiling function definitions has not yet been implemented: positionAt() ignored!
    pass  # Transpiling function definitions has not yet been implemented: getText() ignored!
    pass  # Transpiling function definitions has not yet been implemented: getWordRangeAtPosition() ignored!
    pass  # Transpiling function definitions has not yet been implemented: validateRange() ignored!
    pass  # Transpiling function definitions has not yet been implemented: validatePosition() ignored!


class Position():
    line: float
    character: float
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: isBefore() ignored!
    pass  # Transpiling function definitions has not yet been implemented: isBeforeOrEqual() ignored!
    pass  # Transpiling function definitions has not yet been implemented: isAfter() ignored!
    pass  # Transpiling function definitions has not yet been implemented: isAfterOrEqual() ignored!
    pass  # Transpiling function definitions has not yet been implemented: isEqual() ignored!
    pass  # Transpiling function definitions has not yet been implemented: compareTo() ignored!
    pass  # Transpiling function definitions has not yet been implemented: translate() ignored!
    pass  # Transpiling function definitions has not yet been implemented: translate() ignored!
    pass  # Transpiling function definitions has not yet been implemented: with() ignored!
    pass  # Transpiling function definitions has not yet been implemented: with() ignored!


class Range():
    start: Position
    end: Position
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    isEmpty: bool
    isSingleLine: bool
    pass  # Transpiling function definitions has not yet been implemented: contains() ignored!
    pass  # Transpiling function definitions has not yet been implemented: isEqual() ignored!
    pass  # Transpiling function definitions has not yet been implemented: intersection() ignored!
    pass  # Transpiling function definitions has not yet been implemented: union() ignored!
    pass  # Transpiling function definitions has not yet been implemented: with() ignored!
    pass  # Transpiling function definitions has not yet been implemented: with() ignored!


class Selection(Range, ):
    anchor: Position
    active: Position
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    isReversed: bool


class TextEditorSelectionChangeKind(IntEnum):
    Keyboard = 1
    Mouse = 2
    Command = 3


class TextEditorSelectionChangeEvent(TypedDict, total=True):
    textEditor: 'TextEditor'
    selections: List[Selection]
    kind: Union[TextEditorSelectionChangeKind, 'undefined']


class TextEditorVisibleRangesChangeEvent(TypedDict, total=True):
    textEditor: 'TextEditor'
    visibleRanges: List[Range]


class TextEditorOptionsChangeEvent(TypedDict, total=True):
    textEditor: 'TextEditor'
    options: 'TextEditorOptions'


class TextEditorViewColumnChangeEvent(TypedDict, total=True):
    textEditor: 'TextEditor'
    viewColumn: 'ViewColumn'


class TextEditorCursorStyle(IntEnum):
    Line = 1
    Block = 2
    Underline = 3
    LineThin = 4
    BlockOutline = 5
    UnderlineThin = 6


class TextEditorLineNumbersStyle(IntEnum):
    Off = 0
    On = 1
    Relative = 2


class TextEditorOptions(TypedDict, total=False):
    tabSize: Union[float, str, None]
    insertSpaces: Union[bool, str, None]
    cursorStyle: Optional[TextEditorCursorStyle]
    lineNumbers: Optional[TextEditorLineNumbersStyle]


class TextEditorDecorationType():
    key: str
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class TextEditorRevealType(IntEnum):
    Default = 0
    InCenter = 1
    InCenterIfOutsideViewport = 2
    AtTop = 3


class OverviewRulerLane(IntEnum):
    Left = 1
    Center = 2
    Right = 4
    Full = 7


class DecorationRangeBehavior(IntEnum):
    OpenOpen = 0
    ClosedClosed = 1
    OpenClosed = 2
    ClosedOpen = 3


class TextDocumentShowOptions(TypedDict, total=False):
    viewColumn: Optional['ViewColumn']
    preserveFocus: Optional[bool]
    preview: Optional[bool]
    selection: Optional[Range]


class ThemeColor():
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class ThemeIcon():
    File: 'ThemeIcon'
    Folder: 'ThemeIcon'
    id: str
    color: Union[ThemeColor, 'undefined', None]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class ThemableDecorationRenderOptions(TypedDict, total=False):
    backgroundColor: Union[str, ThemeColor, None]
    outline: Optional[str]
    outlineColor: Union[str, ThemeColor, None]
    outlineStyle: Optional[str]
    outlineWidth: Optional[str]
    border: Optional[str]
    borderColor: Union[str, ThemeColor, None]
    borderRadius: Optional[str]
    borderSpacing: Optional[str]
    borderStyle: Optional[str]
    borderWidth: Optional[str]
    fontStyle: Optional[str]
    fontWeight: Optional[str]
    textDecoration: Optional[str]
    cursor: Optional[str]
    color: Union[str, ThemeColor, None]
    opacity: Optional[str]
    terSpacing: Optional[str]
    gutterIconPath: Union[str, 'Uri', None]
    gutterIconSize: Optional[str]
    overviewRulerColor: Union[str, ThemeColor, None]
    before: Optional['ThemableDecorationAttachmentRenderOptions']
    after: Optional['ThemableDecorationAttachmentRenderOptions']


class ThemableDecorationAttachmentRenderOptions(TypedDict, total=False):
    contentText: Optional[str]
    contentIconPath: Union[str, 'Uri', None]
    border: Optional[str]
    borderColor: Union[str, ThemeColor, None]
    fontStyle: Optional[str]
    fontWeight: Optional[str]
    textDecoration: Optional[str]
    color: Union[str, ThemeColor, None]
    backgroundColor: Union[str, ThemeColor, None]
    margin: Optional[str]
    width: Optional[str]
    height: Optional[str]


class DecorationRenderOptions(ThemableDecorationRenderOptions, TypedDict, total=False):
    isWholeLine: Optional[bool]
    rangeBehavior: Optional[DecorationRangeBehavior]
    overviewRulerLane: Optional[OverviewRulerLane]
    light: Optional[ThemableDecorationRenderOptions]
    dark: Optional[ThemableDecorationRenderOptions]


class DecorationOptions(TypedDict, total=False):
    range: Range
    hoverMessage: Union['MarkdownString', 'MarkedString', 'Array'[Union['MarkdownString', 'MarkedString']], None]
    renderOptions: Optional['DecorationInstanceRenderOptions']


class ThemableDecorationInstanceRenderOptions(TypedDict, total=False):
    before: Optional[ThemableDecorationAttachmentRenderOptions]
    after: Optional[ThemableDecorationAttachmentRenderOptions]


class DecorationInstanceRenderOptions(ThemableDecorationInstanceRenderOptions, TypedDict, total=False):
    light: Optional[ThemableDecorationInstanceRenderOptions]
    dark: Optional[ThemableDecorationInstanceRenderOptions]


class TextEditor():
    document: TextDocument
    selection: Selection
    selections: List[Selection]
    visibleRanges: List[Range]
    options: TextEditorOptions
    viewColumn: Union['ViewColumn', 'undefined']
    pass  # Transpiling function definitions has not yet been implemented: edit() ignored!
    pass  # Transpiling function definitions has not yet been implemented: insertSnippet() ignored!
    pass  # Transpiling function definitions has not yet been implemented: setDecorations() ignored!
    pass  # Transpiling function definitions has not yet been implemented: revealRange() ignored!
    pass  # Transpiling function definitions has not yet been implemented: show() ignored!
    pass  # Transpiling function definitions has not yet been implemented: hide() ignored!


class EndOfLine(IntEnum):
    LF = 1
    CRLF = 2


class TextEditorEdit():
    pass  # Transpiling function definitions has not yet been implemented: replace() ignored!
    pass  # Transpiling function definitions has not yet been implemented: insert() ignored!
    pass  # Transpiling function definitions has not yet been implemented: delete() ignored!
    pass  # Transpiling function definitions has not yet been implemented: setEndOfLine() ignored!


class Uri():
    pass  # Transpiling function definitions has not yet been implemented: parse() ignored!
    pass  # Transpiling function definitions has not yet been implemented: file() ignored!
    pass  # Transpiling function definitions has not yet been implemented: joinPath() ignored!
    pass  # Transpiling function definitions has not yet been implemented: from() ignored!
    private: Any
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    scheme: str
    authority: str
    path: str
    query: str
    fragment: str
    fsPath: str
    pass  # Transpiling function definitions has not yet been implemented: with() ignored!
    pass  # Transpiling function definitions has not yet been implemented: toString() ignored!
    pass  # Transpiling function definitions has not yet been implemented: toJSON() ignored!


class CancellationToken(TypedDict, total=True):
    isCancellationRequested: bool
    onCancellationRequested: 'Event'['any']


class CancellationTokenSource():
    token: CancellationToken
    pass  # Transpiling function definitions has not yet been implemented: cancel() ignored!
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class CancellationError(Error, ):
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class Disposable():
    pass  # Transpiling function definitions has not yet been implemented: from() ignored!
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


T = TypeVar('T')


class Event(Generic[T], ):
    pass  # Transpiling function definitions has not yet been implemented: anonyous() ignored!


T = TypeVar('T')


class EventEmitter(Generic[T], ):
    event: Event[T]
    pass  # Transpiling function definitions has not yet been implemented: fire() ignored!
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class FileSystemWatcher(Disposable, TypedDict, total=True):
    ignoreCreateEvents: bool
    ignoreChangeEvents: bool
    ignoreDeleteEvents: bool
    onDidCreate: Event[Uri]
    onDidChange: Event[Uri]
    onDidDelete: Event[Uri]


class TextDocumentContentProvider():
    onDidChange: Optional[Event[Uri]]
    pass  # Transpiling function definitions has not yet been implemented: provideTextDocumentContent() ignored!


class QuickPickItemKind(IntEnum):
    Separator = -1
    Default = 0


class QuickPickItem(TypedDict, total=False):
    label: str
    kind: Optional[QuickPickItemKind]
    description: Optional[str]
    detail: Optional[str]
    picked: Optional[bool]
    alwaysShow: Optional[bool]
    buttons: Optional[List['QuickInputButton']]


class QuickPickOptions():
    title: Optional[str]
    matchOnDescription: Optional[bool]
    matchOnDetail: Optional[bool]
    placeHolder: Optional[str]
    ignoreFocusOut: Optional[bool]
    canPickMany: Optional[bool]
    pass  # Transpiling function definitions has not yet been implemented: onDidSelectItem() ignored!


class WorkspaceFolderPickOptions(TypedDict, total=False):
    placeHolder: Optional[str]
    ignoreFocusOut: Optional[bool]


class OpenDialogOptions(TypedDict, total=False):
    defaultUri: Optional[Uri]
    openLabel: Optional[str]
    canSelectFiles: Optional[bool]
    canSelectFolders: Optional[bool]
    canSelectMany: Optional[bool]
    filters: Optional[Dict[str, List[str]]]
    title: Optional[str]


class SaveDialogOptions(TypedDict, total=False):
    defaultUri: Optional[Uri]
    saveLabel: Optional[str]
    filters: Optional[Dict[str, List[str]]]
    title: Optional[str]


class MessageItem(TypedDict, total=False):
    title: str
    isCloseAffordance: Optional[bool]


class MessageOptions(TypedDict, total=False):
    modal: Optional[bool]
    detail: Optional[str]


class InputBoxOptions():
    title: Optional[str]
    value: Optional[str]
    valueSelection: Optional[Tuple[float, float]]
    prompt: Optional[str]
    placeHolder: Optional[str]
    password: Optional[bool]
    ignoreFocusOut: Optional[bool]
    pass  # Transpiling function definitions has not yet been implemented: validateInput() ignored!


class RelativePattern():
    baseUri: Uri
    base: str
    pattern: str
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


GlobPattern = Union[str, RelativePattern]


class DocumentFilter(TypedDict, total=False):
    language: Optional[str]
    scheme: Optional[str]
    pattern: Optional[GlobPattern]


DocumentSelector = Union[DocumentFilter, str, ReadonlyArray[Union[DocumentFilter, string]]]


ProviderResult = Union[T, undefined, None, Thenable[Union[T, undefined, null]]]


class CodeActionKind():
    Empty: 'CodeActionKind'
    QuickFix: 'CodeActionKind'
    Refactor: 'CodeActionKind'
    RefactorExtract: 'CodeActionKind'
    RefactorInline: 'CodeActionKind'
    RefactorRewrite: 'CodeActionKind'
    Source: 'CodeActionKind'
    SourceOrganizeImports: 'CodeActionKind'
    SourceFixAll: 'CodeActionKind'
    private: Any
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    value: str
    pass  # Transpiling function definitions has not yet been implemented: append() ignored!
    pass  # Transpiling function definitions has not yet been implemented: intersects() ignored!
    pass  # Transpiling function definitions has not yet been implemented: contains() ignored!


class CodeActionTriggerKind(IntEnum):
    Invoke = 1
    Automatic = 2


class CodeActionContext(TypedDict, total=True):
    triggerKind: CodeActionTriggerKind
    diagnostics: List['Diagnostic']
    only: Union[CodeActionKind, 'undefined']


class CodeAction():
    class Disabled_(TypedDict, total=True):
        reason: str
    title: str
    edit: Optional['WorkspaceEdit']
    diagnostics: Optional[List['Diagnostic']]
    command: Optional[Command]
    kind: Optional[CodeActionKind]
    isPreferred: Optional[bool]
    disabled: Optional[Disabled_]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


T = TypeVar('T')


class CodeActionProvider(Generic[T], ):
    pass  # Transpiling function definitions has not yet been implemented: provideCodeActions() ignored!
    pass  # Transpiling function definitions has not yet been implemented: resolveCodeAction() ignored!


class CodeActionProviderMetadata(TypedDict, total=False):
    providedCodeActionKinds: Optional[List[CodeActionKind]]
    documentation: Optional['ReadonlyArray'[kind: CodeActionKind
    command: Command]]


class CodeLens():
    range: Range
    command: Optional[Command]
    isResolved: bool
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


T = TypeVar('T')


class CodeLensProvider(Generic[T], ):
    onDidChangeCodeLenses: Optional[Event['void']]
    pass  # Transpiling function definitions has not yet been implemented: provideCodeLenses() ignored!
    pass  # Transpiling function definitions has not yet been implemented: resolveCodeLens() ignored!


DefinitionLink = LocationLink


Definition = Union[Location, List['Location']]


class DefinitionProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideDefinition() ignored!


class ImplementationProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideImplementation() ignored!


class TypeDefinitionProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideTypeDefinition() ignored!


Declaration = Union[Location, List['Location'], List['LocationLink']]


class DeclarationProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideDeclaration() ignored!


class MarkdownString():
    value: str
    isTrusted: Optional[bool]
    supportThemeIcons: Optional[bool]
    supportHtml: Optional[bool]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendText() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendMarkdown() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendCodeblock() ignored!


class MarkedString_1(TypedDict, total=True):
    language: str
    value: str
MarkedString = Union[str, MarkedString_1]


class Hover():
    contents: 'Array'[Union[MarkdownString, MarkedString]]
    range: Optional[Range]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class HoverProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideHover() ignored!


class EvaluatableExpression():
    range: Range
    expression: Union[str, 'undefined', None]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class EvaluatableExpressionProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideEvaluatableExpression() ignored!


class InlineValueText():
    range: Range
    text: str
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class InlineValueVariableLookup():
    range: Range
    iableName: Union[str, 'undefined', None]
    caseSensitiveLookup: bool
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class InlineValueEvaluatableExpression():
    range: Range
    expression: Union[str, 'undefined', None]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


InlineValue = Union[InlineValueText, InlineValueVariableLookup, InlineValueEvaluatableExpression]


class InlineValueContext(TypedDict, total=True):
    frameId: float
    stoppedLocation: Range


class InlineValuesProvider():
    onDidChangeInlineValues: Union[Event['void'], 'undefined', None]
    pass  # Transpiling function definitions has not yet been implemented: provideInlineValues() ignored!


class DocumentHighlightKind(IntEnum):
    Text = 0
    Read = 1
    Write = 2


class DocumentHighlight():
    range: Range
    kind: Optional[DocumentHighlightKind]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class DocumentHighlightProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideDocumentHighlights() ignored!


class SymbolKind(IntEnum):
    File = 0
    Module = 1
    Namespace = 2
    Package = 3
    Class = 4
    Method = 5
    Property = 6
    Field = 7
    Constructor = 8
    Enum = 9
    Interface = 10
    Function = 11
    Variable = 12
    Constant = 13
    String = 14
    Number = 15
    Boolean = 16
    Array = 17
    Object = 18
    Key = 19
    Null = 20
    EnumMember = 21
    Struct = 22
    Event = 23
    Operator = 24
    TypeParameter = 25


class SymbolTag(IntEnum):
    Deprecated = 1


class SymbolInformation():
    name: str
    containerName: str
    kind: SymbolKind
    tags: Optional[List[SymbolTag]]
    location: 'Location'
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class DocumentSymbol():
    name: str
    detail: str
    kind: SymbolKind
    tags: Optional[List[SymbolTag]]
    range: Range
    selectionRange: Range
    children: List['DocumentSymbol']
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class DocumentSymbolProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideDocumentSymbols() ignored!


class DocumentSymbolProviderMetadata(TypedDict, total=False):
    label: Optional[str]


T = TypeVar('T')


class WorkspaceSymbolProvider(Generic[T], ):
    pass  # Transpiling function definitions has not yet been implemented: provideWorkspaceSymbols() ignored!
    pass  # Transpiling function definitions has not yet been implemented: resolveWorkspaceSymbol() ignored!


class ReferenceContext(TypedDict, total=True):
    includeDeclaration: bool


class ReferenceProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideReferences() ignored!


class TextEdit():
    pass  # Transpiling function definitions has not yet been implemented: replace() ignored!
    pass  # Transpiling function definitions has not yet been implemented: insert() ignored!
    pass  # Transpiling function definitions has not yet been implemented: delete() ignored!
    pass  # Transpiling function definitions has not yet been implemented: setEndOfLine() ignored!
    range: Range
    newText: str
    newEol: Optional[EndOfLine]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class WorkspaceEditEntryMetadata(TypedDict, total=False):
    class IconPath_1(TypedDict, total=True):
        light: Uri
        dark: Uri
    needsConfirmation: bool
    label: str
    description: Optional[str]
    iconPath: Union[Uri, IconPath_1, ThemeIcon, None]


class WorkspaceEdit():
    size: float
    pass  # Transpiling function definitions has not yet been implemented: replace() ignored!
    pass  # Transpiling function definitions has not yet been implemented: insert() ignored!
    pass  # Transpiling function definitions has not yet been implemented: delete() ignored!
    pass  # Transpiling function definitions has not yet been implemented: has() ignored!
    pass  # Transpiling function definitions has not yet been implemented: set() ignored!
    pass  # Transpiling function definitions has not yet been implemented: get() ignored!
    pass  # Transpiling function definitions has not yet been implemented: createFile() ignored!
    pass  # Transpiling function definitions has not yet been implemented: deleteFile() ignored!
    pass  # Transpiling function definitions has not yet been implemented: renameFile() ignored!
    pass  # Transpiling function definitions has not yet been implemented: entries() ignored!


class SnippetString():
    value: str
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendText() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendTabstop() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendPlaceholder() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendChoice() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendVariable() ignored!


class RenameProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideRenameEdits() ignored!
    pass  # Transpiling function definitions has not yet been implemented: prepareRename() ignored!


class SemanticTokensLegend():
    tokenTypes: List[str]
    tokenModifiers: List[str]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class SemanticTokensBuilder():
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: push() ignored!
    pass  # Transpiling function definitions has not yet been implemented: push() ignored!
    pass  # Transpiling function definitions has not yet been implemented: build() ignored!


class SemanticTokens():
    resultId: Union[str, 'undefined']
    data: 'Uint32Array'
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class SemanticTokensEdits():
    resultId: Union[str, 'undefined']
    edits: List['SemanticTokensEdit']
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class SemanticTokensEdit():
    start: float
    deleteCount: float
    data: Union['Uint32Array', 'undefined']
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class DocumentSemanticTokensProvider():
    onDidChangeSemanticTokens: Optional[Event['void']]
    pass  # Transpiling function definitions has not yet been implemented: provideDocumentSemanticTokens() ignored!
    pass  # Transpiling function definitions has not yet been implemented: provideDocumentSemanticTokensEdits() ignored!


class DocumentRangeSemanticTokensProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideDocumentRangeSemanticTokens() ignored!


class FormattingOptions(TypedDict, total=True):
    tabSize: float
    insertSpaces: bool


class DocumentFormattingEditProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideDocumentFormattingEdits() ignored!


class DocumentRangeFormattingEditProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideDocumentRangeFormattingEdits() ignored!


class OnTypeFormattingEditProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideOnTypeFormattingEdits() ignored!


class ParameterInformation():
    label: Union[str, Tuple[float, float]]
    documentation: Union[str, MarkdownString, None]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class SignatureInformation():
    label: str
    documentation: Union[str, MarkdownString, None]
    parameters: List[ParameterInformation]
    activeParameter: Optional[float]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class SignatureHelp(TypedDict, total=True):
    signatures: List[SignatureInformation]
    activeSignature: float
    activeParameter: float


class SignatureHelpTriggerKind(IntEnum):
    Invoke = 1
    TriggerCharacter = 2
    ContentChange = 3


class SignatureHelpContext(TypedDict, total=True):
    triggerKind: SignatureHelpTriggerKind
    triggerCharacter: Union[str, 'undefined']
    isRetrigger: bool
    activeSignatureHelp: Union[SignatureHelp, 'undefined']


class SignatureHelpProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideSignatureHelp() ignored!


class SignatureHelpProviderMetadata(TypedDict, total=True):
    triggerCharacters: List[str]
    retriggerCharacters: List[str]


class CompletionItemLabel(TypedDict, total=False):
    label: str
    detail: Optional[str]
    description: Optional[str]


class CompletionItemKind(IntEnum):
    Text = 0
    Method = 1
    Function = 2
    Constructor = 3
    Field = 4
    Variable = 5
    Class = 6
    Interface = 7
    Module = 8
    Property = 9
    Unit = 10
    Value = 11
    Enum = 12
    Keyword = 13
    Snippet = 14
    Color = 15
    Reference = 17
    File = 16
    Folder = 18
    EnumMember = 19
    Constant = 20
    Struct = 21
    Event = 22
    Operator = 23
    TypeParameter = 24
    User = 25
    Issue = 26


class CompletionItemTag(IntEnum):
    Deprecated = 1


class CompletionItem():
    class Range_1(TypedDict, total=True):
        inserting: Range
        replacing: Range
    label: Union[str, CompletionItemLabel]
    kind: Optional[CompletionItemKind]
    tags: Optional[List[CompletionItemTag]]
    detail: Optional[str]
    documentation: Union[str, MarkdownString, None]
    sortText: Optional[str]
    filterText: Optional[str]
    preselect: Optional[bool]
    insertText: Union[str, SnippetString, None]
    range: Union[Range, Range_1, None]
    commitCharacters: Optional[List[str]]
    keepWhitespace: Optional[bool]
    textEdit: Optional[TextEdit]
    additionalTextEdits: Optional[List[TextEdit]]
    command: Optional[Command]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


T = TypeVar('T')


class CompletionList(Generic[T], ):
    isIncomplete: Optional[bool]
    items: List[T]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class CompletionTriggerKind(IntEnum):
    Invoke = 0
    TriggerCharacter = 1
    TriggerForIncompleteCompletions = 2


class CompletionContext(TypedDict, total=True):
    triggerKind: CompletionTriggerKind
    triggerCharacter: Union[str, 'undefined']


T = TypeVar('T')


class CompletionItemProvider(Generic[T], ):
    pass  # Transpiling function definitions has not yet been implemented: provideCompletionItems() ignored!
    pass  # Transpiling function definitions has not yet been implemented: resolveCompletionItem() ignored!


class DocumentLink():
    range: Range
    target: Optional[Uri]
    tooltip: Optional[str]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


T = TypeVar('T')


class DocumentLinkProvider(Generic[T], ):
    pass  # Transpiling function definitions has not yet been implemented: provideDocumentLinks() ignored!
    pass  # Transpiling function definitions has not yet been implemented: resolveDocumentLink() ignored!


class Color():
    red: float
    green: float
    blue: float
    alpha: float
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class ColorInformation():
    range: Range
    color: Color
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class ColorPresentation():
    label: str
    textEdit: Optional[TextEdit]
    additionalTextEdits: Optional[List[TextEdit]]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class DocumentColorProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideDocumentColors() ignored!
    pass  # Transpiling function definitions has not yet been implemented: provideColorPresentations() ignored!


class InlayHintKind(IntEnum):
    Type = 1
    Parameter = 2


class InlayHintLabelPart():
    value: str
    tooltip: Union[str, MarkdownString, 'undefined', None]
    location: Union['Location', 'undefined', None]
    command: Union[Command, 'undefined', None]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class InlayHint():
    position: Position
    label: Union[str, List[InlayHintLabelPart]]
    tooltip: Union[str, MarkdownString, 'undefined', None]
    command: Optional[Command]
    kind: Optional[InlayHintKind]
    paddingLeft: Optional[bool]
    paddingRight: Optional[bool]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


T = TypeVar('T')


class InlayHintsProvider(Generic[T], ):
    onDidChangeInlayHints: Optional[Event['void']]
    pass  # Transpiling function definitions has not yet been implemented: provideInlayHints() ignored!
    pass  # Transpiling function definitions has not yet been implemented: resolveInlayHint() ignored!


class FoldingRange():
    start: float
    end: float
    kind: Optional['FoldingRangeKind']
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class FoldingRangeKind(IntEnum):
    Comment = 1
    Imports = 2
    Region = 3


class FoldingContext(TypedDict, total=True):
    pass


class FoldingRangeProvider():
    onDidChangeFoldingRanges: Optional[Event['void']]
    pass  # Transpiling function definitions has not yet been implemented: provideFoldingRanges() ignored!


class SelectionRange():
    range: Range
    parent: Optional['SelectionRange']
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class SelectionRangeProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideSelectionRanges() ignored!


class CallHierarchyItem():
    name: str
    kind: SymbolKind
    tags: Optional[List[SymbolTag]]
    detail: Optional[str]
    uri: Uri
    range: Range
    selectionRange: Range
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class CallHierarchyIncomingCall():
    from_: CallHierarchyItem
    fromRanges: List[Range]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class CallHierarchyOutgoingCall():
    to: CallHierarchyItem
    fromRanges: List[Range]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class CallHierarchyProvider():
    pass  # Transpiling function definitions has not yet been implemented: prepareCallHierarchy() ignored!
    pass  # Transpiling function definitions has not yet been implemented: provideCallHierarchyIncomingCalls() ignored!
    pass  # Transpiling function definitions has not yet been implemented: provideCallHierarchyOutgoingCalls() ignored!


class TypeHierarchyItem():
    name: str
    kind: SymbolKind
    tags: Optional['ReadonlyArray'[SymbolTag]]
    detail: Optional[str]
    uri: Uri
    range: Range
    selectionRange: Range
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class TypeHierarchyProvider():
    pass  # Transpiling function definitions has not yet been implemented: prepareTypeHierarchy() ignored!
    pass  # Transpiling function definitions has not yet been implemented: provideTypeHierarchySupertypes() ignored!
    pass  # Transpiling function definitions has not yet been implemented: provideTypeHierarchySubtypes() ignored!


class LinkedEditingRanges():
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    ranges: List[Range]
    wordPattern: Union['RegExp', 'undefined']


class LinkedEditingRangeProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideLinkedEditingRanges() ignored!


CharacterPair = Tuple[str, str]


class CommentRule(TypedDict, total=False):
    lineComment: Optional[str]
    blockComment: Optional[CharacterPair]


class IndentationRule(TypedDict, total=False):
    decreaseIndentPattern: 'RegExp'
    increaseIndentPattern: 'RegExp'
    indentNextLinePattern: Optional['RegExp']
    unIndentedLinePattern: Optional['RegExp']


class IndentAction(IntEnum):
    None_ = 0
    Indent = 1
    IndentOutdent = 2
    Outdent = 3


class EnterAction(TypedDict, total=False):
    indentAction: IndentAction
    appendText: Optional[str]
    removeText: Optional[float]


class OnEnterRule(TypedDict, total=False):
    beforeText: 'RegExp'
    afterText: Optional['RegExp']
    previousLineText: Optional['RegExp']
    action: EnterAction


class LanguageConfiguration(TypedDict, total=False):
    class __electricCharacterSupport_(TypedDict, total=False):
        class DocComment_(TypedDict, total=False):
            scope: str
            open: str
            lineStart: str
            close: Optional[str]
        brackets: Optional[Any]
        docComment: Optional[DocComment_]
    class __characterPairSupport_(TypedDict, total=False):
        autoClosingPairs: List[open: str
        close: str
        notIn: Optional[List[str]]]
    comments: Optional[CommentRule]
    brackets: Optional[List[CharacterPair]]
    wordPattern: Optional['RegExp']
    indentationRules: Optional[IndentationRule]
    onEnterRules: Optional[List[OnEnterRule]]
    __electricCharacterSupport: Optional[__electricCharacterSupport_]
    __characterPairSupport: Optional[__characterPairSupport_]


class ConfigurationTarget(IntEnum):
    Global = 1
    Workspace = 2
    WorkspaceFolder = 3


class WorkspaceConfiguration():
    pass  # Transpiling function definitions has not yet been implemented: get() ignored!
    pass  # Transpiling function definitions has not yet been implemented: get() ignored!
    pass  # Transpiling function definitions has not yet been implemented: has() ignored!
    pass  # Transpiling function definitions has not yet been implemented: inspect() ignored!
    pass  # Transpiling function definitions has not yet been implemented: update() ignored!


class Location():
    uri: Uri
    range: Range
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class LocationLink(TypedDict, total=False):
    originSelectionRange: Optional[Range]
    targetUri: Uri
    targetRange: Range
    targetSelectionRange: Optional[Range]


class DiagnosticChangeEvent(TypedDict, total=True):
    uris: List[Uri]


class DiagnosticSeverity(IntEnum):
    Error = 0
    Warning = 1
    Information = 2
    Hint = 3


class DiagnosticRelatedInformation():
    location: Location
    message: str
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class DiagnosticTag(IntEnum):
    Unnecessary = 1
    Deprecated = 2


class Diagnostic():
    class Code_2(TypedDict, total=True):
        value: Union[str, float]
        target: Uri
    range: Range
    message: str
    severity: DiagnosticSeverity
    source: Optional[str]
    code: Union[str, float, Code_2, None]
    relatedInformation: Optional[List[DiagnosticRelatedInformation]]
    tags: Optional[List[DiagnosticTag]]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class DiagnosticCollection():
    name: str
    pass  # Transpiling function definitions has not yet been implemented: set() ignored!
    pass  # Transpiling function definitions has not yet been implemented: set() ignored!
    pass  # Transpiling function definitions has not yet been implemented: delete() ignored!
    pass  # Transpiling function definitions has not yet been implemented: clear() ignored!
    pass  # Transpiling function definitions has not yet been implemented: forEach() ignored!
    pass  # Transpiling function definitions has not yet been implemented: get() ignored!
    pass  # Transpiling function definitions has not yet been implemented: has() ignored!
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class LanguageStatusSeverity(IntEnum):
    Information = 0
    Warning = 1
    Error = 2


class LanguageStatusItem():
    id: str
    name: Union[str, 'undefined']
    selector: DocumentSelector
    severity: LanguageStatusSeverity
    text: str
    detail: Optional[str]
    busy: bool
    command: Union[Command, 'undefined']
    accessibilityInformation: Optional['AccessibilityInformation']
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class ViewColumn(IntEnum):
    Active = -1
    Beside = -2
    One = 1
    Two = 2
    Three = 3
    Four = 4
    Five = 5
    Six = 6
    Seven = 7
    Eight = 8
    Nine = 9


class OutputChannel():
    name: str
    pass  # Transpiling function definitions has not yet been implemented: append() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendLine() ignored!
    pass  # Transpiling function definitions has not yet been implemented: replace() ignored!
    pass  # Transpiling function definitions has not yet been implemented: clear() ignored!
    pass  # Transpiling function definitions has not yet been implemented: show() ignored!
    pass  # Transpiling function definitions has not yet been implemented: show() ignored!
    pass  # Transpiling function definitions has not yet been implemented: hide() ignored!
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class AccessibilityInformation(TypedDict, total=False):
    label: str
    role: Optional[str]


class StatusBarAlignment(IntEnum):
    Left = 1
    Right = 2


class StatusBarItem():
    id: str
    alignment: StatusBarAlignment
    priority: Union[float, 'undefined']
    name: Union[str, 'undefined']
    text: str
    tooltip: Union[str, MarkdownString, 'undefined']
    color: Union[str, ThemeColor, 'undefined']
    backgroundColor: Union[ThemeColor, 'undefined']
    command: Union[str, Command, 'undefined']
    accessibilityInformation: Union[AccessibilityInformation, 'undefined']
    pass  # Transpiling function definitions has not yet been implemented: show() ignored!
    pass  # Transpiling function definitions has not yet been implemented: hide() ignored!
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


T = TypeVar('T')


class Progress(Generic[T], ):
    pass  # Transpiling function definitions has not yet been implemented: report() ignored!


class Terminal():
    name: str
    processId: 'Thenable'[Union['number', 'undefined']]
    creationOptions: 'Readonly'[Union['TerminalOptions', 'ExtensionTerminalOptions']]
    exitStatus: Union['TerminalExitStatus', 'undefined']
    state: 'TerminalState'
    pass  # Transpiling function definitions has not yet been implemented: sendText() ignored!
    pass  # Transpiling function definitions has not yet been implemented: show() ignored!
    pass  # Transpiling function definitions has not yet been implemented: hide() ignored!
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class TerminalLocation(IntEnum):
    Panel = 1
    Editor = 2


class TerminalEditorLocationOptions(TypedDict, total=False):
    viewColumn: ViewColumn
    preserveFocus: Optional[bool]


class TerminalSplitLocationOptions(TypedDict, total=True):
    parentTerminal: Terminal


class TerminalState(TypedDict, total=True):
    isInteractedWith: bool


class TerminalLinkContext(TypedDict, total=True):
    line: str
    terminal: Terminal


T = TypeVar('T')


class TerminalLinkProvider(Generic[T], ):
    pass  # Transpiling function definitions has not yet been implemented: provideTerminalLinks() ignored!
    pass  # Transpiling function definitions has not yet been implemented: handleTerminalLink() ignored!


class TerminalLink():
    startIndex: float
    length: float
    tooltip: Optional[str]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class TerminalProfileProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideTerminalProfile() ignored!


class TerminalProfile():
    options: Union['TerminalOptions', 'ExtensionTerminalOptions']
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class FileDecoration():
    badge: Optional[str]
    tooltip: Optional[str]
    color: Optional[ThemeColor]
    propagate: Optional[bool]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class FileDecorationProvider():
    onDidChangeFileDecorations: Optional[Event[Union['undefined', Uri, List[Uri]]]]
    pass  # Transpiling function definitions has not yet been implemented: provideFileDecoration() ignored!


class ExtensionKind(IntEnum):
    UI = 1
    Workspace = 2


T = TypeVar('T')


class Extension(Generic[T], ):
    id: str
    extensionUri: Uri
    extensionPath: str
    isActive: bool
    packageJSON: Any
    extensionKind: ExtensionKind
    exports: T
    pass  # Transpiling function definitions has not yet been implemented: activate() ignored!


class ExtensionMode(IntEnum):
    Production = 1
    Development = 2
    Test = 3


class ExtensionContext():
    subscriptions: List[pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!]
    workspaceState: 'Memento'
    globalState: Any
    secrets: 'SecretStorage'
    extensionUri: Uri
    extensionPath: str
    environmentVariableCollection: 'EnvironmentVariableCollection'
    pass  # Transpiling function definitions has not yet been implemented: asAbsolutePath() ignored!
    storageUri: Union[Uri, 'undefined']
    storagePath: Union[str, 'undefined']
    globalStorageUri: Uri
    globalStoragePath: str
    logUri: Uri
    logPath: str
    extensionMode: ExtensionMode
    extension: Extension['any']


class Memento():
    pass  # Transpiling function definitions has not yet been implemented: keys() ignored!
    pass  # Transpiling function definitions has not yet been implemented: get() ignored!
    pass  # Transpiling function definitions has not yet been implemented: get() ignored!
    pass  # Transpiling function definitions has not yet been implemented: update() ignored!


class SecretStorageChangeEvent(TypedDict, total=True):
    key: str


class SecretStorage():
    pass  # Transpiling function definitions has not yet been implemented: get() ignored!
    pass  # Transpiling function definitions has not yet been implemented: store() ignored!
    pass  # Transpiling function definitions has not yet been implemented: delete() ignored!
    onDidChange: Event[SecretStorageChangeEvent]


class ColorThemeKind(IntEnum):
    Light = 1
    Dark = 2
    HighContrast = 3


class ColorTheme(TypedDict, total=True):
    kind: ColorThemeKind


class TaskRevealKind(IntEnum):
    Always = 1
    Silent = 2
    Never = 3


class TaskPanelKind(IntEnum):
    Shared = 1
    Dedicated = 2
    New = 3


class TaskPresentationOptions(TypedDict, total=False):
    reveal: Optional[TaskRevealKind]
    echo: Optional[bool]
    focus: Optional[bool]
    panel: Optional[TaskPanelKind]
    showReuseMessage: Optional[bool]
    clear: Optional[bool]


class TaskGroup():
    Clean: 'TaskGroup'
    Build: 'TaskGroup'
    Rebuild: 'TaskGroup'
    Test: 'TaskGroup'
    isDefault: Union[bool, 'undefined']
    id: str
    private: Any
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class TaskDefinition(TypedDict, total=True):
    type: str


class ProcessExecutionOptions(TypedDict, total=False):
    cwd: Optional[str]
    env: Optional[Dict[str, str]]


class ProcessExecution():
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    process: str
    args: List[str]
    options: Optional[ProcessExecutionOptions]


class ShellQuotingOptions(TypedDict, total=False):
    class Escape_1(TypedDict, total=True):
        escapeChar: str
        charsToEscape: str
    escape: Union[str, Escape_1, None]
    strong: Optional[str]
    weak: Optional[str]


class ShellExecutionOptions(TypedDict, total=False):
    executable: Optional[str]
    shellArgs: Optional[List[str]]
    shellQuoting: Optional[ShellQuotingOptions]
    cwd: Optional[str]
    env: Optional[Dict[str, str]]


class ShellQuoting(IntEnum):
    Escape = 1
    Strong = 2
    Weak = 3


class ShellQuotedString(TypedDict, total=True):
    value: str
    quoting: ShellQuoting


class ShellExecution():
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    commandLine: Union[str, 'undefined']
    command: Union[str, ShellQuotedString]
    args: List[Union[str, ShellQuotedString]]
    options: Optional[ShellExecutionOptions]


class CustomExecution():
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class TaskScope(IntEnum):
    Global = 1
    Workspace = 2


class RunOptions(TypedDict, total=False):
    reevaluateOnRerun: Optional[bool]


class Task():
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    definition: TaskDefinition
    scope: Union['TaskScope.Global', 'TaskScope.Workspace', 'WorkspaceFolder', 'undefined']
    name: str
    detail: Optional[str]
    execution: Union[ProcessExecution, ShellExecution, CustomExecution, None]
    isBackground: bool
    source: str
    group: Optional[TaskGroup]
    presentationOptions: TaskPresentationOptions
    problemMatchers: List[str]
    runOptions: RunOptions


T = TypeVar('T')


class TaskProvider(Generic[T], ):
    pass  # Transpiling function definitions has not yet been implemented: provideTasks() ignored!
    pass  # Transpiling function definitions has not yet been implemented: resolveTask() ignored!


class TaskExecution():
    task: Task
    pass  # Transpiling function definitions has not yet been implemented: terminate() ignored!


class TaskStartEvent(TypedDict, total=True):
    execution: TaskExecution


class TaskEndEvent(TypedDict, total=True):
    execution: TaskExecution


class TaskProcessStartEvent(TypedDict, total=True):
    execution: TaskExecution
    processId: float


class TaskProcessEndEvent(TypedDict, total=True):
    execution: TaskExecution
    exitCode: Union[float, 'undefined']


class TaskFilter(TypedDict, total=False):
    version: Optional[str]
    type: Optional[str]


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


class FileType(IntEnum):
    Unknown = 0
    File = 1
    Directory = 2
    SymbolicLink = 64


class FilePermission(IntEnum):
    Readonly = 1


class FileStat(TypedDict, total=False):
    type: FileType
    ctime: float
    mtime: float
    size: float
    permissions: Optional[FilePermission]


class FileSystemError(Error, ):
    pass  # Transpiling function definitions has not yet been implemented: FileNotFound() ignored!
    pass  # Transpiling function definitions has not yet been implemented: FileExists() ignored!
    pass  # Transpiling function definitions has not yet been implemented: FileNotADirectory() ignored!
    pass  # Transpiling function definitions has not yet been implemented: FileIsADirectory() ignored!
    pass  # Transpiling function definitions has not yet been implemented: NoPermissions() ignored!
    pass  # Transpiling function definitions has not yet been implemented: Unavailable() ignored!
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    code: str


class FileChangeType(IntEnum):
    Changed = 1
    Created = 2
    Deleted = 3


class FileChangeEvent(TypedDict, total=True):
    type: FileChangeType
    uri: Uri


class FileSystemProvider():
    onDidChangeFile: Event[List[FileChangeEvent]]
    pass  # Transpiling function definitions has not yet been implemented: watch() ignored!
    pass  # Transpiling function definitions has not yet been implemented: stat() ignored!
    pass  # Transpiling function definitions has not yet been implemented: readDirectory() ignored!
    pass  # Transpiling function definitions has not yet been implemented: createDirectory() ignored!
    pass  # Transpiling function definitions has not yet been implemented: readFile() ignored!
    pass  # Transpiling function definitions has not yet been implemented: writeFile() ignored!
    pass  # Transpiling function definitions has not yet been implemented: delete() ignored!
    pass  # Transpiling function definitions has not yet been implemented: rename() ignored!
    pass  # Transpiling function definitions has not yet been implemented: copy() ignored!


class FileSystem():
    pass  # Transpiling function definitions has not yet been implemented: stat() ignored!
    pass  # Transpiling function definitions has not yet been implemented: readDirectory() ignored!
    pass  # Transpiling function definitions has not yet been implemented: createDirectory() ignored!
    pass  # Transpiling function definitions has not yet been implemented: readFile() ignored!
    pass  # Transpiling function definitions has not yet been implemented: writeFile() ignored!
    pass  # Transpiling function definitions has not yet been implemented: delete() ignored!
    pass  # Transpiling function definitions has not yet been implemented: rename() ignored!
    pass  # Transpiling function definitions has not yet been implemented: copy() ignored!
    pass  # Transpiling function definitions has not yet been implemented: isWritableFileSystem() ignored!


class WebviewPortMapping(TypedDict, total=True):
    webviewPort: float
    extensionHostPort: float


class WebviewOptions(TypedDict, total=False):
    enableScripts: Optional[bool]
    enableForms: Optional[bool]
    enableCommandUris: Optional[bool]
    localResourceRoots: Optional[List[Uri]]
    portMapping: Optional[List[WebviewPortMapping]]


class Webview():
    options: WebviewOptions
    html: str
    onDidReceiveMessage: Event['any']
    pass  # Transpiling function definitions has not yet been implemented: postMessage() ignored!
    pass  # Transpiling function definitions has not yet been implemented: asWebviewUri() ignored!
    cspSource: str


class WebviewPanelOptions(TypedDict, total=False):
    enableFindWidget: Optional[bool]
    retainContextWhenHidden: Optional[bool]


class WebviewPanel():
    class IconPath_1(TypedDict, total=True):
        light: Uri
        dark: Uri
    viewType: str
    title: str
    iconPath: Union[Uri, IconPath_1, None]
    webview: Webview
    options: WebviewPanelOptions
    viewColumn: Union[ViewColumn, 'undefined']
    active: bool
    visible: bool
    onDidChangeViewState: Event['WebviewPanelOnDidChangeViewStateEvent']
    onDidDispose: Event['void']
    pass  # Transpiling function definitions has not yet been implemented: reveal() ignored!
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class WebviewPanelOnDidChangeViewStateEvent(TypedDict, total=True):
    webviewPanel: WebviewPanel


T = TypeVar('T')


class WebviewPanelSerializer(Generic[T], ):
    pass  # Transpiling function definitions has not yet been implemented: deserializeWebviewPanel() ignored!


class WebviewView():
    viewType: str
    webview: Webview
    title: Optional[str]
    description: Optional[str]
    onDidDispose: Event['void']
    visible: bool
    onDidChangeVisibility: Event['void']
    pass  # Transpiling function definitions has not yet been implemented: show() ignored!


T = TypeVar('T')


class WebviewViewResolveContext(Generic[T], GenericTypedDict, total=True):
    state: Union[T, 'undefined']


class WebviewViewProvider():
    pass  # Transpiling function definitions has not yet been implemented: resolveWebviewView() ignored!


class CustomTextEditorProvider():
    pass  # Transpiling function definitions has not yet been implemented: resolveCustomTextEditor() ignored!


class CustomDocument():
    uri: Uri
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


T = TypeVar('T')


class CustomDocumentEditEvent(Generic[T], ):
    document: T
    pass  # Transpiling function definitions has not yet been implemented: undo() ignored!
    pass  # Transpiling function definitions has not yet been implemented: redo() ignored!
    label: Optional[str]


T = TypeVar('T')


class CustomDocumentContentChangeEvent(Generic[T], GenericTypedDict, total=True):
    document: T


class CustomDocumentBackup():
    id: str
    pass  # Transpiling function definitions has not yet been implemented: delete() ignored!


class CustomDocumentBackupContext(TypedDict, total=True):
    destination: Uri


class CustomDocumentOpenContext(TypedDict, total=True):
    backupId: Union[str, 'undefined']
    untitledDocumentData: Union['Uint8Array', 'undefined']


T = TypeVar('T')


class CustomReadonlyEditorProvider(Generic[T], ):
    pass  # Transpiling function definitions has not yet been implemented: openCustomDocument() ignored!
    pass  # Transpiling function definitions has not yet been implemented: resolveCustomEditor() ignored!


T = TypeVar('T')


class CustomEditorProvider(CustomReadonlyEditorProvider[T], Generic[T], ):
    onDidChangeCustomDocument: Union[Event[CustomDocumentEditEvent[T]], Event[CustomDocumentContentChangeEvent[T]]]
    pass  # Transpiling function definitions has not yet been implemented: saveCustomDocument() ignored!
    pass  # Transpiling function definitions has not yet been implemented: saveCustomDocumentAs() ignored!
    pass  # Transpiling function definitions has not yet been implemented: revertCustomDocument() ignored!
    pass  # Transpiling function definitions has not yet been implemented: backupCustomDocument() ignored!


class Clipboard():
    pass  # Transpiling function definitions has not yet been implemented: readText() ignored!
    pass  # Transpiling function definitions has not yet been implemented: writeText() ignored!


class UIKind(IntEnum):
    Desktop = 1
    Web = 2


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


class WindowState(TypedDict, total=True):
    focused: bool


class UriHandler():
    pass  # Transpiling function definitions has not yet been implemented: handleUri() ignored!


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


T = TypeVar('T')


class TreeViewOptions(Generic[T], GenericTypedDict, total=False):
    treeDataProvider: 'TreeDataProvider'[T]
    showCollapseAll: Optional[bool]
    canSelectMany: Optional[bool]


T = TypeVar('T')


class TreeViewExpansionEvent(Generic[T], GenericTypedDict, total=True):
    element: T


T = TypeVar('T')


class TreeViewSelectionChangeEvent(Generic[T], GenericTypedDict, total=True):
    selection: List[T]


class TreeViewVisibilityChangeEvent(TypedDict, total=True):
    visible: bool


T = TypeVar('T')


class TreeView(Disposable, Generic[T], ):
    onDidExpandElement: Event[TreeViewExpansionEvent[T]]
    onDidCollapseElement: Event[TreeViewExpansionEvent[T]]
    selection: List[T]
    onDidChangeSelection: Event[TreeViewSelectionChangeEvent[T]]
    visible: bool
    onDidChangeVisibility: Event[TreeViewVisibilityChangeEvent]
    message: Optional[str]
    title: Optional[str]
    description: Optional[str]
    pass  # Transpiling function definitions has not yet been implemented: reveal() ignored!


T = TypeVar('T')


class TreeDataProvider(Generic[T], ):
    onDidChangeTreeData: Optional[Event[Union[T, 'undefined', 'null', 'void']]]
    pass  # Transpiling function definitions has not yet been implemented: getTreeItem() ignored!
    pass  # Transpiling function definitions has not yet been implemented: getChildren() ignored!
    pass  # Transpiling function definitions has not yet been implemented: getParent() ignored!
    pass  # Transpiling function definitions has not yet been implemented: resolveTreeItem() ignored!


class TreeItem():
    class IconPath_2(TypedDict, total=True):
        light: Union[str, Uri]
        dark: Union[str, Uri]
    label: Union[str, 'TreeItemLabel', None]
    id: Optional[str]
    iconPath: Union[str, Uri, IconPath_2, ThemeIcon, None]
    description: Union[str, bool, None]
    resourceUri: Optional[Uri]
    tooltip: Union[str, MarkdownString, 'undefined', None]
    command: Optional[Command]
    collapsibleState: Optional['TreeItemCollapsibleState']
    contextValue: Optional[str]
    accessibilityInformation: Optional[AccessibilityInformation]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class TreeItemCollapsibleState(IntEnum):
    None_ = 0
    Collapsed = 1
    Expanded = 2


class TreeItemLabel(TypedDict, total=False):
    label: str
    highlights: Optional[List[Tuple[float, float]]]


class TerminalOptions(TypedDict, total=False):
    class IconPath_1(TypedDict, total=True):
        light: Uri
        dark: Uri
    name: Optional[str]
    shellPath: Optional[str]
    shellArgs: Union[List[str], str, None]
    cwd: Union[str, Uri, None]
    env: Optional[Dict[str, Union[str, None, 'undefined']]]
    strictEnv: Optional[bool]
    hideFromUser: Optional[bool]
    message: Optional[str]
    iconPath: Union[Uri, IconPath_1, ThemeIcon, None]
    color: Optional[ThemeColor]
    location: Union[TerminalLocation, TerminalEditorLocationOptions, TerminalSplitLocationOptions, None]
    isTransient: Optional[bool]


class ExtensionTerminalOptions(TypedDict, total=False):
    class IconPath_1(TypedDict, total=True):
        light: Uri
        dark: Uri
    name: str
    pty: 'Pseudoterminal'
    iconPath: Union[Uri, IconPath_1, ThemeIcon, None]
    color: Optional[ThemeColor]
    location: Union[TerminalLocation, TerminalEditorLocationOptions, TerminalSplitLocationOptions, None]
    isTransient: Optional[bool]


class Pseudoterminal():
    onDidWrite: Event['string']
    onDidOverrideDimensions: Optional[Event[Union['TerminalDimensions', 'undefined']]]
    onDidClose: Optional[Event[Union['void', 'number']]]
    onDidChangeName: Optional[Event['string']]
    pass  # Transpiling function definitions has not yet been implemented: open() ignored!
    pass  # Transpiling function definitions has not yet been implemented: close() ignored!
    pass  # Transpiling function definitions has not yet been implemented: handleInput() ignored!
    pass  # Transpiling function definitions has not yet been implemented: setDimensions() ignored!


class TerminalDimensions(TypedDict, total=True):
    columns: float
    rows: float


class TerminalExitStatus(TypedDict, total=True):
    code: Union[float, 'undefined']


class EnvironmentVariableMutatorType(IntEnum):
    Replace = 1
    Append = 2
    Prepend = 3


class EnvironmentVariableMutator(TypedDict, total=True):
    type: EnvironmentVariableMutatorType
    value: str


class EnvironmentVariableCollection():
    persistent: bool
    pass  # Transpiling function definitions has not yet been implemented: replace() ignored!
    pass  # Transpiling function definitions has not yet been implemented: append() ignored!
    pass  # Transpiling function definitions has not yet been implemented: prepend() ignored!
    pass  # Transpiling function definitions has not yet been implemented: get() ignored!
    pass  # Transpiling function definitions has not yet been implemented: forEach() ignored!
    pass  # Transpiling function definitions has not yet been implemented: delete() ignored!
    pass  # Transpiling function definitions has not yet been implemented: clear() ignored!


class ProgressLocation(IntEnum):
    SourceControl = 1
    Window = 10
    Notification = 15


class ProgressOptions(TypedDict, total=False):
    class Location_1(TypedDict, total=True):
        viewId: str
    location: Union[ProgressLocation, Location_1]
    title: Optional[str]
    cancellable: Optional[bool]


class QuickInput():
    title: Union[str, 'undefined']
    step: Union[float, 'undefined']
    totalSteps: Union[float, 'undefined']
    enabled: bool
    busy: bool
    ignoreFocusOut: bool
    pass  # Transpiling function definitions has not yet been implemented: show() ignored!
    pass  # Transpiling function definitions has not yet been implemented: hide() ignored!
    onDidHide: Event['void']
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


T = TypeVar('T')


class QuickPick(QuickInput, Generic[T], GenericTypedDict, total=False):
    value: str
    placeholder: Union[str, 'undefined']
    onDidChangeValue: Event['string']
    onDidAccept: Event['void']
    buttons: List['QuickInputButton']
    onDidTriggerButton: Event['QuickInputButton']
    onDidTriggerItemButton: Event['QuickPickItemButtonEvent'[T]]
    items: List[T]
    canSelectMany: bool
    matchOnDescription: bool
    matchOnDetail: bool
    keepScrollPosition: Optional[bool]
    activeItems: List[T]
    onDidChangeActive: Event[List[T]]
    selectedItems: List[T]
    onDidChangeSelection: Event[List[T]]


class InputBox(QuickInput, TypedDict, total=True):
    value: str
    placeholder: Union[str, 'undefined']
    password: bool
    onDidChangeValue: Event['string']
    onDidAccept: Event['void']
    buttons: List['QuickInputButton']
    onDidTriggerButton: Event['QuickInputButton']
    prompt: Union[str, 'undefined']
    validationMessage: Union[str, 'undefined']


class QuickInputButton(TypedDict, total=False):
    class IconPath_1(TypedDict, total=True):
        light: Uri
        dark: Uri
    iconPath: Union[Uri, IconPath_1, ThemeIcon]
    tooltip: Union[str, 'undefined', None]


class QuickInputButtons():
    Back: QuickInputButton
    private: Any
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


T = TypeVar('T')


class QuickPickItemButtonEvent(Generic[T], GenericTypedDict, total=True):
    button: QuickInputButton
    item: T


class TextDocumentContentChangeEvent(TypedDict, total=True):
    range: Range
    rangeOffset: float
    rangeLength: float
    text: str


class TextDocumentChangeReason(IntEnum):
    Undo = 1
    Redo = 2


class TextDocumentChangeEvent(TypedDict, total=True):
    document: TextDocument
    contentChanges: List[TextDocumentContentChangeEvent]
    reason: Union[TextDocumentChangeReason, 'undefined']


class TextDocumentSaveReason(IntEnum):
    Manual = 1
    AfterDelay = 2
    FocusOut = 3


class TextDocumentWillSaveEvent():
    document: TextDocument
    reason: TextDocumentSaveReason
    pass  # Transpiling function definitions has not yet been implemented: waitUntil() ignored!
    pass  # Transpiling function definitions has not yet been implemented: waitUntil() ignored!


class FileWillCreateEvent():
    token: CancellationToken
    files: List[Uri]
    pass  # Transpiling function definitions has not yet been implemented: waitUntil() ignored!
    pass  # Transpiling function definitions has not yet been implemented: waitUntil() ignored!


class FileCreateEvent(TypedDict, total=True):
    files: List[Uri]


class FileWillDeleteEvent():
    token: CancellationToken
    files: List[Uri]
    pass  # Transpiling function definitions has not yet been implemented: waitUntil() ignored!
    pass  # Transpiling function definitions has not yet been implemented: waitUntil() ignored!


class FileDeleteEvent(TypedDict, total=True):
    files: List[Uri]


class FileWillRenameEvent():
    token: CancellationToken
    files: 'ReadonlyArray'[oldUri: Uri
    newUri: Uri]
    pass  # Transpiling function definitions has not yet been implemented: waitUntil() ignored!
    pass  # Transpiling function definitions has not yet been implemented: waitUntil() ignored!


class FileRenameEvent(TypedDict, total=True):
    files: 'ReadonlyArray'[oldUri: Uri
    newUri: Uri]


class WorkspaceFoldersChangeEvent(TypedDict, total=True):
    added: List['WorkspaceFolder']
    removed: List['WorkspaceFolder']


class WorkspaceFolder(TypedDict, total=True):
    uri: Uri
    name: str
    index: float


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


class ConfigurationScope_3(TypedDict, total=False):
    uri: Optional[Uri]
    languageId: str
ConfigurationScope = Union[Uri, TextDocument, WorkspaceFolder, ConfigurationScope_3]


class ConfigurationChangeEvent():
    pass  # Transpiling function definitions has not yet been implemented: affectsConfiguration() ignored!


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


class NotebookCellKind(IntEnum):
    Markup = 1
    Code = 2


class NotebookCell(TypedDict, total=True):
    index: float
    notebook: 'NotebookDocument'
    kind: NotebookCellKind
    document: TextDocument
    metadata: Dict[str, Any]
    outputs: List['NotebookCellOutput']
    executionSummary: Union['NotebookCellExecutionSummary', 'undefined']


class NotebookEditor(TypedDict, total=True):
    pass


class NotebookRendererMessaging():
    onDidReceiveMessage: Event[editor: NotebookEditor
    message: Any]
    pass  # Transpiling function definitions has not yet been implemented: postMessage() ignored!


class NotebookDocument():
    uri: Uri
    notebookType: str
    version: float
    isDirty: bool
    isUntitled: bool
    isClosed: bool
    metadata: Dict[str, Any]
    cellCount: float
    pass  # Transpiling function definitions has not yet been implemented: cellAt() ignored!
    pass  # Transpiling function definitions has not yet been implemented: getCells() ignored!
    pass  # Transpiling function definitions has not yet been implemented: save() ignored!


class NotebookCellExecutionSummary(TypedDict, total=False):
    class Timing_(TypedDict, total=True):
        startTime: float
        endTime: float
    executionOrder: Optional[float]
    success: Optional[bool]
    timing: Optional[Timing_]


class NotebookRange():
    start: float
    end: float
    isEmpty: bool
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    pass  # Transpiling function definitions has not yet been implemented: with() ignored!


class NotebookCellOutputItem():
    pass  # Transpiling function definitions has not yet been implemented: text() ignored!
    pass  # Transpiling function definitions has not yet been implemented: json() ignored!
    pass  # Transpiling function definitions has not yet been implemented: stdout() ignored!
    pass  # Transpiling function definitions has not yet been implemented: stderr() ignored!
    pass  # Transpiling function definitions has not yet been implemented: error() ignored!
    mime: str
    data: 'Uint8Array'
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class NotebookCellOutput():
    items: List[NotebookCellOutputItem]
    metadata: Optional[Dict[str, Any]]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class NotebookCellData():
    kind: NotebookCellKind
    value: str
    languageId: str
    outputs: Optional[List[NotebookCellOutput]]
    metadata: Optional[Dict[str, Any]]
    executionSummary: Optional[NotebookCellExecutionSummary]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class NotebookData():
    cells: List[NotebookCellData]
    metadata: Optional[Dict[str, Any]]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class NotebookSerializer():
    pass  # Transpiling function definitions has not yet been implemented: deserializeNotebook() ignored!
    pass  # Transpiling function definitions has not yet been implemented: serializeNotebook() ignored!


class NotebookDocumentContentOptions(TypedDict, total=False):
    transientOutputs: Optional[bool]
    transientCellMetadata: Optional[Dict[str, Union[bool, 'undefined']]]
    transientDocumentMetadata: Optional[Dict[str, Union[bool, 'undefined']]]


class NotebookControllerAffinity(IntEnum):
    Default = 1
    Preferred = 2


class NotebookController():
    id: str
    notebookType: str
    supportedLanguages: Optional[List[str]]
    label: str
    description: Optional[str]
    detail: Optional[str]
    supportsExecutionOrder: Optional[bool]
    pass  # Transpiling function definitions has not yet been implemented: createNotebookCellExecution() ignored!
    executeHandler: Callable[[cells: List[NotebookCell], notebook: NotebookDocument, controller: 'NotebookController'], Union[None, 'Thenable'['void']]]
    interruptHandler: Optional[Callable[[notebook: NotebookDocument], Union[None, 'Thenable'['void']]]]
    onDidChangeSelectedNotebooks: Event[notebook: NotebookDocument
    selected: bool]
    pass  # Transpiling function definitions has not yet been implemented: updateNotebookAffinity() ignored!
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class NotebookCellExecution():
    cell: NotebookCell
    token: CancellationToken
    executionOrder: Union[float, 'undefined']
    pass  # Transpiling function definitions has not yet been implemented: start() ignored!
    pass  # Transpiling function definitions has not yet been implemented: end() ignored!
    pass  # Transpiling function definitions has not yet been implemented: clearOutput() ignored!
    pass  # Transpiling function definitions has not yet been implemented: replaceOutput() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendOutput() ignored!
    pass  # Transpiling function definitions has not yet been implemented: replaceOutputItems() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendOutputItems() ignored!


class NotebookCellStatusBarAlignment(IntEnum):
    Left = 1
    Right = 2


class NotebookCellStatusBarItem():
    text: str
    alignment: NotebookCellStatusBarAlignment
    command: Union[str, Command, None]
    tooltip: Optional[str]
    priority: Optional[float]
    accessibilityInformation: Optional[AccessibilityInformation]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class NotebookCellStatusBarItemProvider():
    onDidChangeCellStatusBarItems: Optional[Event['void']]
    pass  # Transpiling function definitions has not yet been implemented: provideCellStatusBarItems() ignored!


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


class SourceControlInputBox(TypedDict, total=True):
    value: str
    placeholder: str
    visible: bool


class QuickDiffProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideOriginalResource() ignored!


class SourceControlResourceThemableDecorations(TypedDict, total=False):
    iconPath: Union[str, Uri, ThemeIcon, None]


class SourceControlResourceDecorations(SourceControlResourceThemableDecorations, TypedDict, total=False):
    strikeThrough: Optional[bool]
    faded: Optional[bool]
    tooltip: Optional[str]
    light: Optional[SourceControlResourceThemableDecorations]
    dark: Optional[SourceControlResourceThemableDecorations]


class SourceControlResourceState(TypedDict, total=False):
    resourceUri: Uri
    command: Optional[Command]
    decorations: Optional[SourceControlResourceDecorations]
    contextValue: Optional[str]


class SourceControlResourceGroup():
    id: str
    label: str
    hideWhenEmpty: Optional[bool]
    resourceStates: List[SourceControlResourceState]
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class SourceControl():
    id: str
    label: str
    rootUri: Union[Uri, 'undefined']
    inputBox: SourceControlInputBox
    count: Optional[float]
    quickDiffProvider: Optional[QuickDiffProvider]
    commitTemplate: Optional[str]
    acceptInputCommand: Optional[Command]
    statusBarCommands: Optional[List[Command]]
    pass  # Transpiling function definitions has not yet been implemented: createResourceGroup() ignored!
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


class DebugProtocolMessage(TypedDict, total=True):
    pass


class DebugProtocolSource(TypedDict, total=True):
    pass


class DebugProtocolBreakpoint(TypedDict, total=True):
    pass


class DebugConfiguration(TypedDict, total=True):
    type: str
    name: str
    request: str


class DebugSession():
    id: str
    type: str
    parentSession: Optional['DebugSession']
    name: str
    workspaceFolder: Union[WorkspaceFolder, 'undefined']
    configuration: DebugConfiguration
    pass  # Transpiling function definitions has not yet been implemented: customRequest() ignored!
    pass  # Transpiling function definitions has not yet been implemented: getDebugProtocolBreakpoint() ignored!


class DebugSessionCustomEvent(TypedDict, total=True):
    session: DebugSession
    event: str
    body: Any


class DebugConfigurationProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideDebugConfigurations() ignored!
    pass  # Transpiling function definitions has not yet been implemented: resolveDebugConfiguration() ignored!
    pass  # Transpiling function definitions has not yet been implemented: resolveDebugConfigurationWithSubstitutedVariables() ignored!


class DebugAdapterExecutable():
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!
    command: str
    args: List[str]
    options: Optional['DebugAdapterExecutableOptions']


class DebugAdapterExecutableOptions(TypedDict, total=False):
    env: Optional[Dict[str, str]]
    cwd: Optional[str]


class DebugAdapterServer():
    port: float
    host: Union[str, 'undefined', None]
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class DebugAdapterNamedPipeServer():
    path: str
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class DebugAdapter(Disposable, ):
    onDidSendMessage: Event[DebugProtocolMessage]
    pass  # Transpiling function definitions has not yet been implemented: handleMessage() ignored!


class DebugAdapterInlineImplementation():
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


DebugAdapterDescriptor = Union[DebugAdapterExecutable, DebugAdapterServer, DebugAdapterNamedPipeServer, DebugAdapterInlineImplementation]


class DebugAdapterDescriptorFactory():
    pass  # Transpiling function definitions has not yet been implemented: createDebugAdapterDescriptor() ignored!


class DebugAdapterTracker():
    pass  # Transpiling function definitions has not yet been implemented: onWillStartSession() ignored!
    pass  # Transpiling function definitions has not yet been implemented: onWillReceiveMessage() ignored!
    pass  # Transpiling function definitions has not yet been implemented: onDidSendMessage() ignored!
    pass  # Transpiling function definitions has not yet been implemented: onWillStopSession() ignored!
    pass  # Transpiling function definitions has not yet been implemented: onError() ignored!
    pass  # Transpiling function definitions has not yet been implemented: onExit() ignored!


class DebugAdapterTrackerFactory():
    pass  # Transpiling function definitions has not yet been implemented: createDebugAdapterTracker() ignored!


class DebugConsole():
    pass  # Transpiling function definitions has not yet been implemented: append() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendLine() ignored!


class BreakpointsChangeEvent(TypedDict, total=True):
    added: List['Breakpoint']
    removed: List['Breakpoint']
    changed: List['Breakpoint']


class Breakpoint():
    id: str
    enabled: bool
    condition: Union[str, 'undefined', None]
    hitCondition: Union[str, 'undefined', None]
    logMessage: Union[str, 'undefined', None]
    protected: Any
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class SourceBreakpoint(Breakpoint, ):
    location: Location
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class FunctionBreakpoint(Breakpoint, ):
    functionName: str
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class DebugConsoleMode(IntEnum):
    Separate = 0
    MergeWithParent = 1


class DebugSessionOptions(TypedDict, total=False):
    parentSession: Optional[DebugSession]
    lifecycleManagedByParent: Optional[bool]
    consoleMode: Optional[DebugConsoleMode]
    noDebug: Optional[bool]
    compact: Optional[bool]


class DebugConfigurationProviderTriggerKind(IntEnum):
    Initial = 1
    Dynamic = 2


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


class CommentThreadCollapsibleState(IntEnum):
    Collapsed = 0
    Expanded = 1


class CommentMode(IntEnum):
    Editing = 0
    Preview = 1


class CommentThread():
    uri: Uri
    range: Range
    comments: List['Comment']
    collapsibleState: CommentThreadCollapsibleState
    canReply: bool
    contextValue: Optional[str]
    label: Optional[str]
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class CommentAuthorInformation(TypedDict, total=False):
    name: str
    iconPath: Optional[Uri]


class CommentReaction(TypedDict, total=True):
    label: str
    iconPath: Union[str, Uri]
    count: float
    authorHasReacted: bool


class Comment(TypedDict, total=False):
    body: Union[str, MarkdownString]
    mode: CommentMode
    author: CommentAuthorInformation
    contextValue: Optional[str]
    reactions: Optional[List[CommentReaction]]
    label: Optional[str]
    timestamp: Optional['Date']


class CommentReply(TypedDict, total=True):
    thread: CommentThread
    text: str


class CommentingRangeProvider():
    pass  # Transpiling function definitions has not yet been implemented: provideCommentingRanges() ignored!


class CommentOptions(TypedDict, total=False):
    prompt: Optional[str]
    placeHolder: Optional[str]


class CommentController():
    id: str
    label: str
    options: Optional[CommentOptions]
    commentingRangeProvider: Optional[CommentingRangeProvider]
    pass  # Transpiling function definitions has not yet been implemented: createCommentThread() ignored!
    reactionHandler: Optional[Callable[[comment: Comment, reaction: CommentReaction], 'Thenable'['void']]]
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


class AuthenticationSession(TypedDict, total=True):
    id: str
    accessToken: str
    account: 'AuthenticationSessionAccountInformation'
    scopes: List[str]


class AuthenticationSessionAccountInformation(TypedDict, total=True):
    id: str
    label: str


class AuthenticationGetSessionOptions(TypedDict, total=False):
    class ForceNewSession_1(TypedDict, total=True):
        detail: str
    clearSessionPreference: Optional[bool]
    createIfNone: Optional[bool]
    forceNewSession: Union[bool, ForceNewSession_1, None]
    silent: Optional[bool]


class AuthenticationProviderInformation(TypedDict, total=True):
    id: str
    label: str


class AuthenticationSessionsChangeEvent(TypedDict, total=True):
    provider: AuthenticationProviderInformation


class AuthenticationProviderOptions(TypedDict, total=False):
    supportsMultipleAccounts: Optional[bool]


class AuthenticationProviderAuthenticationSessionsChangeEvent(TypedDict, total=True):
    added: Union[List[AuthenticationSession], 'undefined']
    removed: Union[List[AuthenticationSession], 'undefined']
    changed: Union[List[AuthenticationSession], 'undefined']


class AuthenticationProvider():
    onDidChangeSessions: Event[AuthenticationProviderAuthenticationSessionsChangeEvent]
    pass  # Transpiling function definitions has not yet been implemented: getSessions() ignored!
    pass  # Transpiling function definitions has not yet been implemented: createSession() ignored!
    pass  # Transpiling function definitions has not yet been implemented: removeSession() ignored!


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


# Transpilation of namespaces that contain more than just constant definitions has not yet been implemented.


class TestRunProfileKind(IntEnum):
    Run = 1
    Debug = 2
    Coverage = 3


class TestTag():
    id: str
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class TestRunProfile():
    label: str
    kind: TestRunProfileKind
    isDefault: bool
    tag: Union[TestTag, 'undefined']
    configureHandler: Union[Callable[[], None], 'undefined']
    runHandler: Callable[[request: 'TestRunRequest', token: CancellationToken], Union['Thenable'['void'], None]]
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class TestController():
    id: str
    label: str
    items: 'TestItemCollection'
    pass  # Transpiling function definitions has not yet been implemented: createRunProfile() ignored!
    resolveHandler: Optional[Callable[[item: Union['TestItem', 'undefined']], Union['Thenable'['void'], None]]]
    refreshHandler: Union[Callable[[token: CancellationToken], Union['Thenable'['void'], None]], 'undefined']
    pass  # Transpiling function definitions has not yet been implemented: createTestRun() ignored!
    pass  # Transpiling function definitions has not yet been implemented: createTestItem() ignored!
    pass  # Transpiling function definitions has not yet been implemented: dispose() ignored!


class TestRunRequest():
    include: Union[List['TestItem'], 'undefined']
    exclude: Union[List['TestItem'], 'undefined']
    profile: Union[TestRunProfile, 'undefined']
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


class TestRun():
    name: Union[str, 'undefined']
    token: CancellationToken
    isPersisted: bool
    pass  # Transpiling function definitions has not yet been implemented: enqueued() ignored!
    pass  # Transpiling function definitions has not yet been implemented: started() ignored!
    pass  # Transpiling function definitions has not yet been implemented: skipped() ignored!
    pass  # Transpiling function definitions has not yet been implemented: failed() ignored!
    pass  # Transpiling function definitions has not yet been implemented: errored() ignored!
    pass  # Transpiling function definitions has not yet been implemented: passed() ignored!
    pass  # Transpiling function definitions has not yet been implemented: appendOutput() ignored!
    pass  # Transpiling function definitions has not yet been implemented: end() ignored!


class TestItemCollection():
    size: float
    pass  # Transpiling function definitions has not yet been implemented: replace() ignored!
    pass  # Transpiling function definitions has not yet been implemented: forEach() ignored!
    pass  # Transpiling function definitions has not yet been implemented: add() ignored!
    pass  # Transpiling function definitions has not yet been implemented: delete() ignored!
    pass  # Transpiling function definitions has not yet been implemented: get() ignored!


class TestItem(TypedDict, total=False):
    id: str
    uri: Union[Uri, 'undefined']
    children: TestItemCollection
    parent: Union['TestItem', 'undefined']
    tags: List[TestTag]
    canResolveChildren: bool
    busy: bool
    label: str
    description: Optional[str]
    sortText: Union[str, 'undefined', None]
    range: Union[Range, 'undefined']
    error: Union[str, MarkdownString, 'undefined']


class TestMessage():
    message: Union[str, MarkdownString]
    expectedOutput: Optional[str]
    actualOutput: Optional[str]
    location: Optional[Location]
    pass  # Transpiling function definitions has not yet been implemented: diff() ignored!
    pass  # Transpiling function definitions has not yet been implemented: constructor() ignored!


T = TypeVar('T')


class Thenable(Generic[T], ):
    pass  # Transpiling function definitions has not yet been implemented: then() ignored!
    pass  # Transpiling function definitions has not yet been implemented: then() ignored!


##### END OF LSP SPECS
